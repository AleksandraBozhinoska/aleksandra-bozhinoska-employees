{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\longest-period-pair\\\\longest-period-pair-ui\\\\src\\\\components\\\\file-upload\\\\FileUpload.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { FilePond } from 'react-filepond';\nimport Dropdown from 'react-dropdown';\nimport \"filepond/dist/filepond.min.css\";\nimport \"./FileUpload.css\";\nimport 'react-dropdown/style.css';\nimport getFileContent from 'services/file-content-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileUpload = () => {\n  _s();\n\n  const options = ['yyyy-MM-dd', 'dd/MM/yyyy', 'dd-MM-yyyy', 'MM-dd-yyyy', 'MM/dd/yyyy'];\n  const [file, setFile] = useState();\n  const [models, setModels] = useState();\n  const [pattern, setPattern] = useState();\n  const [error, setError] = useState();\n\n  const onProcessFile = (error, file) => {\n    if (error) {\n      setError('An error occurred in the attachment upload. Please try again.');\n      setFile(undefined);\n      return;\n    }\n\n    setFile(file);\n    setError(undefined);\n    getFileContent(file.filename).then(res => setModels(res.data)).catch(err => {\n      if (err && !axios.isCancel(err)) {\n        console.warn('An error occurred while trying to load processed file content.');\n      }\n    });\n  };\n\n  const onRemoveFile = () => {\n    setFile(undefined);\n  };\n\n  const onProcessStart = () => {\n    setError(undefined);\n    setFile(undefined);\n  };\n\n  const onSelect = val => {\n    console.log(`New date pattern selected: ${val.value}`);\n    setPattern(val.value);\n  };\n\n  const renderTableData = () => {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee ID #1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee ID #2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Project ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Days worked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: models === null || models === void 0 ? void 0 : models.sort((a, b) => b.daysWorked - a.daysWorked).map(model => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: model.employeeIdFirst\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: model.employeeIdSecond\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: model.projectId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: model.daysWorked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }, this)]\n        }, `${model.employeeIdFirst}-${model.employeeIdSecond}-${model.projectId}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Dropdown, {\n        options: options,\n        onChange: onSelect,\n        value: pattern,\n        placeholder: \"Select a date formatter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FilePond, {\n        onprocessfilestart: onProcessStart,\n        onprocessfile: onProcessFile,\n        onremovefile: onRemoveFile,\n        server: {\n          url: 'http://localhost:8080/api/attachments',\n          process: `/upload?pattern=${pattern}`,\n          revert: null,\n          restore: null,\n          load: null,\n          fetch: null\n        },\n        name: \"file\",\n        labelIdle: \"Drag & Drop the file to parse with the selected formatter or <span class=\\\"filepond--label-action\\\">Browse</span>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), file && renderTableData(), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-wrapper\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FileUpload, \"Mi/hkzJZz0vudYhgZg4lutyubv0=\");\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["C:/data/longest-period-pair/longest-period-pair-ui/src/components/file-upload/FileUpload.tsx"],"names":["React","axios","useState","FilePond","Dropdown","getFileContent","FileUpload","options","file","setFile","models","setModels","pattern","setPattern","error","setError","onProcessFile","undefined","filename","then","res","data","catch","err","isCancel","console","warn","onRemoveFile","onProcessStart","onSelect","val","log","value","renderTableData","sort","a","b","daysWorked","map","model","employeeIdFirst","employeeIdSecond","projectId","url","process","revert","restore","load","fetch"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport axios from 'axios';\r\nimport { useState } from 'react';\r\nimport { FilePond } from 'react-filepond'\r\nimport Dropdown, { Option } from 'react-dropdown';\r\n\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport \"./FileUpload.css\";\r\nimport 'react-dropdown/style.css';\r\n\r\nimport { FilePondErrorDescription, FilePondFile } from 'filepond';\r\nimport { ParsedLine } from 'models/pair-per-project';\r\nimport getFileContent from 'services/file-content-service';\r\n\r\nconst FileUpload = (): JSX.Element => {\r\n\r\n  const options = [\r\n    'yyyy-MM-dd',\r\n    'dd/MM/yyyy',\r\n    'dd-MM-yyyy',\r\n    'MM-dd-yyyy',\r\n    'MM/dd/yyyy'\r\n  ];\r\n\r\n  const [file, setFile] = useState<FilePondFile>();\r\n  const [models, setModels] = useState<ParsedLine[]>();\r\n  const [pattern, setPattern] = useState<string | Option | undefined>();\r\n  const [error, setError] = useState<string | undefined>();\r\n\r\n  const onProcessFile = (error: FilePondErrorDescription | null, file: FilePondFile) => {\r\n    if(error){\r\n      setError('An error occurred in the attachment upload. Please try again.');\r\n      setFile(undefined);\r\n      return;\r\n    }\r\n    \r\n    setFile(file);\r\n    setError(undefined);\r\n\r\n    getFileContent(file.filename)\r\n      .then((res) => setModels(res.data))\r\n      .catch((err) => {\r\n        if (err && !axios.isCancel(err)) {\r\n          console.warn('An error occurred while trying to load processed file content.');\r\n        }\r\n      });\r\n  };\r\n\r\n  const onRemoveFile = () => {\r\n    setFile(undefined);\r\n  };\r\n\r\n  const onProcessStart = () => {\r\n    setError(undefined);\r\n    setFile(undefined);\r\n  };\r\n\r\n  const onSelect = (val: Option) => {\r\n    console.log(`New date pattern selected: ${val.value}`);\r\n    setPattern(val.value);\r\n  };\r\n\r\n  const renderTableData = (): JSX.Element => {\r\n    return <table>\r\n      <thead>\r\n      <tr>\r\n        <th>Employee ID #1</th>\r\n        <th>Employee ID #2</th>\r\n        <th>Project ID</th>\r\n        <th>Days worked</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n        {models?.sort((a, b) => b.daysWorked - a.daysWorked)\r\n          .map(model => <tr key={`${model.employeeIdFirst}-${model.employeeIdSecond}-${model.projectId}`}>\r\n        <td>{model.employeeIdFirst}</td>\r\n        <td>{model.employeeIdSecond}</td>\r\n        <td>{model.projectId}</td>\r\n        <td>{model.daysWorked}</td>\r\n      </tr>\r\n      )}\r\n      </tbody>\r\n    </table>\r\n  };\r\n\r\n    return (\r\n    <div className=\"content-wrapper\">\r\n      <div className=\"dropdown-wrapper\">\r\n        <Dropdown \r\n          options={options} \r\n          onChange={onSelect} \r\n          value={pattern} \r\n          placeholder=\"Select a date formatter\" />\r\n      </div>\r\n      <div>\r\n        <FilePond\r\n          onprocessfilestart={onProcessStart}\r\n          onprocessfile={onProcessFile}\r\n          onremovefile={onRemoveFile}\r\n          server={{ \r\n            url: 'http://localhost:8080/api/attachments', \r\n            process: `/upload?pattern=${pattern}`, \r\n            revert: null, \r\n            restore: null, \r\n            load: null, \r\n            fetch: null \r\n          }}\r\n          name=\"file\"\r\n          labelIdle='Drag & Drop the file to parse with the selected formatter or <span class=\"filepond--label-action\">Browse</span>' \r\n        >\r\n        </FilePond>\r\n        {file && renderTableData()}\r\n        {error && <div className=\"error-wrapper\">{error}</div>}\r\n      </div>\r\n    </div>);\r\n}\r\n\r\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}