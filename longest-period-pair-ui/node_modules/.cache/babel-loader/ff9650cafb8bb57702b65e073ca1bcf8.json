{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\longest-period-pair\\\\longest-period-pair-ui\\\\src\\\\components\\\\file-upload\\\\FileUpload.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { FilePond } from 'react-filepond';\nimport \"filepond/dist/filepond.min.css\";\nimport getFileContent from 'services/file-content-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileUpload = () => {\n  _s();\n\n  const [file, setFile] = useState();\n  const [models, setModels] = useState();\n\n  const onProcessFile = (error, file) => {\n    if (error) {\n      console.error('An error occurred in the attachment upload. Please try again.');\n      setFile(undefined);\n      return;\n    }\n\n    setFile(file);\n    getFileContent(file.filename).then(res => setModels(res.data)).catch(err => {\n      if (err && !axios.isCancel(err)) {\n        console.warn('An error occurred while trying to load processed file content.');\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FilePond, {\n      onprocessfile: onProcessFile,\n      server: {\n        url: 'http://localhost:8080/api/attachments',\n        process: '/upload',\n        revert: null,\n        restore: null,\n        load: null,\n        fetch: null\n      },\n      name: \"file\",\n      labelIdle: \"Drag & Drop your files or <span class=\\\"filepond--label-action\\\">Browse</span>\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), file && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: file.filename\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 18\n    }, this), file]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n};\n\n_s(FileUpload, \"hwzUoffU4WglrtNGtzQVO3hsam8=\");\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["C:/data/longest-period-pair/longest-period-pair-ui/src/components/file-upload/FileUpload.tsx"],"names":["React","axios","useState","FilePond","getFileContent","FileUpload","file","setFile","models","setModels","onProcessFile","error","console","undefined","filename","then","res","data","catch","err","isCancel","warn","url","process","revert","restore","load","fetch"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,OAAO,gCAAP;AAGA,OAAOC,cAAP,MAA2B,+BAA3B;;;AAEA,MAAMC,UAAU,GAAG,MAAmB;AAAA;;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,EAAhC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,EAApC;;AAGA,QAAMQ,aAAa,GAAG,CAACC,KAAD,EAAyCL,IAAzC,KAAgE;AACpF,QAAGK,KAAH,EAAS;AACPC,MAAAA,OAAO,CAACD,KAAR,CAAc,+DAAd;AACAJ,MAAAA,OAAO,CAACM,SAAD,CAAP;AACA;AACD;;AAEDN,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAF,IAAAA,cAAc,CAACE,IAAI,CAACQ,QAAN,CAAd,CACGC,IADH,CACSC,GAAD,IAASP,SAAS,CAACO,GAAG,CAACC,IAAL,CAD1B,EAEGC,KAFH,CAEUC,GAAD,IAAS;AACd,UAAIA,GAAG,IAAI,CAAClB,KAAK,CAACmB,QAAN,CAAeD,GAAf,CAAZ,EAAiC;AAC/BP,QAAAA,OAAO,CAACS,IAAR,CAAa,gEAAb;AACD;AACF,KANH;AAOD,GAfD;;AAiBE,sBACE;AAAA,4BACE,QAAC,QAAD;AACE,MAAA,aAAa,EAAEX,aADjB;AAEC,MAAA,MAAM,EAAE;AAACY,QAAAA,GAAG,EAAE,uCAAN;AAA+CC,QAAAA,OAAO,EAAE,SAAxD;AAAmEC,QAAAA,MAAM,EAAE,IAA3E;AAAiFC,QAAAA,OAAO,EAAE,IAA1F;AAAgGC,QAAAA,IAAI,EAAE,IAAtG;AAA4GC,QAAAA,KAAK,EAAE;AAAnH,OAFT;AAGC,MAAA,IAAI,EAAC,MAHN;AAIC,MAAA,SAAS,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,YADF,EAQGrB,IAAI,iBAAI;AAAA,gBAAIA,IAAI,CAACQ;AAAT;AAAA;AAAA;AAAA;AAAA,YARX,EASGR,IATH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcH,CApCD;;GAAMD,U;;KAAAA,U;AAsCN,eAAeA,UAAf","sourcesContent":["import * as React from 'react';\r\nimport axios from 'axios';\r\nimport { useState } from 'react';\r\nimport { FilePond } from 'react-filepond'\r\n\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport { FilePondErrorDescription, FilePondFile } from 'filepond';\r\nimport { ParsedLine } from 'models/parsed-line';\r\nimport getFileContent from 'services/file-content-service';\r\n\r\nconst FileUpload = (): JSX.Element => {\r\n  const [file, setFile] = useState<FilePondFile>();\r\n  const [models, setModels] = useState<ParsedLine[]>();\r\n\r\n\r\n  const onProcessFile = (error: FilePondErrorDescription | null, file: FilePondFile) => {\r\n    if(error){\r\n      console.error('An error occurred in the attachment upload. Please try again.');\r\n      setFile(undefined);\r\n      return;\r\n    }\r\n    \r\n    setFile(file);\r\n    getFileContent(file.filename)\r\n      .then((res) => setModels(res.data))\r\n      .catch((err) => {\r\n        if (err && !axios.isCancel(err)) {\r\n          console.warn('An error occurred while trying to load processed file content.');\r\n        }\r\n      });\r\n  };\r\n\r\n    return (\r\n      <div>\r\n        <FilePond\r\n          onprocessfile={onProcessFile}\r\n         server={{url: 'http://localhost:8080/api/attachments', process: '/upload', revert: null, restore: null, load: null, fetch: null }}\r\n         name=\"file\"\r\n         labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>' \r\n        >\r\n        </FilePond>\r\n        {file && <p>{file.filename}</p>}\r\n        {file}\r\n      </div>\r\n      \r\n    );\r\n}\r\n\r\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}